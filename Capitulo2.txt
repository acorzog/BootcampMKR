Las ramas (branches) nos permiten desviarnos de la línea principal de desarrollo.

Por defecto git crea una rama por defecto llamada master.

En qué rama estamos?
Para ver en qué rama nos encontramos utiliza el comando git status. La primera línea nos dice en qué rama estamos:

$ git status
On branch master
...
Listar ramas
Para listar todas las ramas utiliza el comando git branch. Por ejemplo:

$ git branch
* master
  rama-1
  rama-2
  ...
La rama que tiene el asterísco (*) es en la que nos encontramos actualmente.

Crear una rama
Para crear una rama utiliza el comando git branch seguido del nombre que le quieras dar a la rama. Por ejemplo, para crear una nueva rama llamada mi-rama ejecutaríamos el siguiente comando:

git branch mi-rama
Este comando crea la rama pero no nos ubica sobre ella. Para cambiar de rama debes ejecutar el siguiente comando:

git checkout mi-rama
Sin embargo, la mayoría de veces, cuando uno quiere crear una rama también se quiere ubicar sobre ella, así que existe un atajo:

git checkout -b mi-rama
La diferencia con el comando anterior es la opción -b.

Cambiar el nombre de una rama
Para cambiar el nombre de la rama debes estar ubicado sobre ella y ejecutar el comando git branch -m seguido del nuevo nombre.

Por ejemplo, asumiendo que estamos sobre la rama mi-rama, y que queremos cambiarle el nombre a otra-rama, ejecutaríamos el siguiente comando:

git branch -m otra-rama
Integrar una rama
Para integrar los commits de una rama (p.e. mi-rama) a otra (p.e. master) primero debemos ubicarnos sobre la rama principal (p.e. master) y ejecutar el comando git merge seguido del nombre de la rama:

git checkout master
git merge mi-rama
Si la rama master tiene commits que no están en mi-rama se va a crear un commit adicional llamado merge commit.

Eliminar una rama
Para eliminar una rama que ya ha sido integrada en otra utilizamos el comando git branch -d seguido del nombre de la rama que quieres eliminar.

Por ejemplo, asumiendo que la rama mi-rama ya fue integrada a master ejecutaríamos el siguiente comando:

git branch -d mi-rama
Si la rama no ha sido integrada aparecería un error. Sin embargo, si quisieramos eliminar una rama que aún no ha sido integrada podríamos cambiar la opción -d por -D:

git branch -D mi-rama
Recursos adicionales
Para configurar el editor (VSCode o Atom) sigue las instrucciones que se encuentran en el siguiente enlace:

https://guias.makeitreal.camp/git/instalacion-configuracion#configurando-el-editor-de-texto